# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.0
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.
# This file is compatible with both classic and new-style classes.

from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_FloodProp', [dirname(__file__)])
        except ImportError:
            import _FloodProp
            return _FloodProp
        if fp is not None:
            try:
                _mod = imp.load_module('_FloodProp', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _FloodProp = swig_import_helper()
    del swig_import_helper
else:
    import _FloodProp
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


I_N2 = _FloodProp.I_N2

def isNAN_FP(*args):
  return _FloodProp.isNAN_FP(*args)
isNAN_FP = _FloodProp.isNAN_FP

def isINFINITY_FP(*args):
  return _FloodProp.isINFINITY_FP(*args)
isINFINITY_FP = _FloodProp.isINFINITY_FP

def getIndex(*args):
  return _FloodProp.getIndex(*args)
getIndex = _FloodProp.getIndex

def setGas():
  return _FloodProp.setGas()
setGas = _FloodProp.setGas

def setLiq():
  return _FloodProp.setLiq()
setLiq = _FloodProp.setLiq

def cK_e(*args):
  return _FloodProp.cK_e(*args)
cK_e = _FloodProp.cK_e

def cv_e(*args):
  return _FloodProp.cv_e(*args)
cv_e = _FloodProp.cv_e

def R(*args):
  return _FloodProp.R(*args)
R = _FloodProp.R

def rho_l(*args):
  return _FloodProp.rho_l(*args)
rho_l = _FloodProp.rho_l

def rho_g(*args):
  return _FloodProp.rho_g(*args)
rho_g = _FloodProp.rho_g

def rho_m(*args):
  return _FloodProp.rho_m(*args)
rho_m = _FloodProp.rho_m

def h_g(*args):
  return _FloodProp.h_g(*args)
h_g = _FloodProp.h_g

def u_g(*args):
  return _FloodProp.u_g(*args)
u_g = _FloodProp.u_g

def s_g(*args):
  return _FloodProp.s_g(*args)
s_g = _FloodProp.s_g

def u_m(*args):
  return _FloodProp.u_m(*args)
u_m = _FloodProp.u_m

def h_m(*args):
  return _FloodProp.h_m(*args)
h_m = _FloodProp.h_m

def c_v(*args):
  return _FloodProp.c_v(*args)
c_v = _FloodProp.c_v

def c_p(*args):
  return _FloodProp.c_p(*args)
c_p = _FloodProp.c_p

def c_l(*args):
  return _FloodProp.c_l(*args)
c_l = _FloodProp.c_l

def u_l(*args):
  return _FloodProp.u_l(*args)
u_l = _FloodProp.u_l

def s_l(*args):
  return _FloodProp.s_l(*args)
s_l = _FloodProp.s_l

def k_l(*args):
  return _FloodProp.k_l(*args)
k_l = _FloodProp.k_l

def mu_l(*args):
  return _FloodProp.mu_l(*args)
mu_l = _FloodProp.mu_l

def k_g(*args):
  return _FloodProp.k_g(*args)
k_g = _FloodProp.k_g

def mu_g(*args):
  return _FloodProp.mu_g(*args)
mu_g = _FloodProp.mu_g

def dudT_m(*args):
  return _FloodProp.dudT_m(*args)
dudT_m = _FloodProp.dudT_m

def dudP_m(*args):
  return _FloodProp.dudP_m(*args)
dudP_m = _FloodProp.dudP_m

def dudxL_m(*args):
  return _FloodProp.dudxL_m(*args)
dudxL_m = _FloodProp.dudxL_m

def drhodP_m(*args):
  return _FloodProp.drhodP_m(*args)
drhodP_m = _FloodProp.drhodP_m

def drhodT_m(*args):
  return _FloodProp.drhodT_m(*args)
drhodT_m = _FloodProp.drhodT_m

def drhodxL_m(*args):
  return _FloodProp.drhodxL_m(*args)
drhodxL_m = _FloodProp.drhodxL_m

def dvdT_m(*args):
  return _FloodProp.dvdT_m(*args)
dvdT_m = _FloodProp.dvdT_m

def dvdP_m(*args):
  return _FloodProp.dvdP_m(*args)
dvdP_m = _FloodProp.dvdP_m

def cp_mix(*args):
  return _FloodProp.cp_mix(*args)
cp_mix = _FloodProp.cp_mix

def mu_mix(*args):
  return _FloodProp.mu_mix(*args)
mu_mix = _FloodProp.mu_mix

def k_mix(*args):
  return _FloodProp.k_mix(*args)
k_mix = _FloodProp.k_mix

def VoidFrac(*args):
  return _FloodProp.VoidFrac(*args)
VoidFrac = _FloodProp.VoidFrac

def Pr_mix(*args):
  return _FloodProp.Pr_mix(*args)
Pr_mix = _FloodProp.Pr_mix

def kstar_m(*args):
  return _FloodProp.kstar_m(*args)
kstar_m = _FloodProp.kstar_m

def s_m(*args):
  return _FloodProp.s_m(*args)
s_m = _FloodProp.s_m

def e_m(*args):
  return _FloodProp.e_m(*args)
e_m = _FloodProp.e_m

def T_hp(*args):
  return _FloodProp.T_hp(*args)
T_hp = _FloodProp.T_hp

def T_Up(*args):
  return _FloodProp.T_Up(*args)
T_Up = _FloodProp.T_Up

def p_Trho(*args):
  return _FloodProp.p_Trho(*args)
p_Trho = _FloodProp.p_Trho

def h_sp(*args):
  return _FloodProp.h_sp(*args)
h_sp = _FloodProp.h_sp

def T_sp(*args):
  return _FloodProp.T_sp(*args)
T_sp = _FloodProp.T_sp

def dpdT_const_v(*args):
  return _FloodProp.dpdT_const_v(*args)
dpdT_const_v = _FloodProp.dpdT_const_v


